// Function to check if a point (latitude, longitude) is inside the polygon
function isPointInPolygon(lat, long, polygon) {
  let isInside = false;
  const n = polygon.length;
  let x = long, y = lat;

  let xinters;
  let p1x = polygon[0][0], p1y = polygon[0][1];
  for (let i = 1; i <= n; i++) {
    let p2x = polygon[i % n][0], p2y = polygon[i % n][1];
    if (y > Math.min(p1y, p2y)) {
      if (y <= Math.max(p1y, p2y)) {
        if (x <= Math.max(p1x, p2x)) {
          if (p1y !== p2y) {
            xinters = (y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;
          }
          if (p1x === p2x || x <= xinters) {
            isInside = !isInside;
          }
        }
      }
    }
    p1x = p2x;
    p1y = p2y;
  }

  return isInside;
}

// Using the provided dataset for Singapore
const test = {
  type: "FeatureCollection",
  features: [
    {
      type: "Feature",
      properties: {
        name: "Singapore",
        "ISO3166-1-Alpha-3": "SGP",
        "ISO3166-1-Alpha-2": "SG",
      },
      geometry: {
        coordinates: [
          [
            [104.06414692472994, 1.4359722879905976],
            [104.08292835727805, 1.4193009683523221],
            [104.09104161595126, 1.403182825534905],
            [104.07526485235736, 1.3593778016564626],
            [104.09370453286624, 1.331869779002312],
            [104.02711083651613, 1.2948786003109565],
            [103.95436474980197, 1.295348429060668],
            [103.93274132569343, 1.299043845575466],
            [103.91003766944475, 1.2893397985572579],
            [103.89888242837607, 1.2754329141735403],
            [103.87952317837988, 1.2737956087923872],
            [103.86453184355591, 1.2673081027976714],
            [103.86698849087861, 1.2633318481934848],
            [103.86540998641564, 1.2560695911612523],
            [103.87153703999232, 1.241276788815287],
            [103.89570244179113, 1.2378570065615533],
            [103.8909164328651, 1.2180615576241878],
            [103.877413673934, 1.2117609851058833],
            [103.86803209804248, 1.1989569753612603],
            [103.86375242393923, 1.2034539660520929],
            [103.85049448644182, 1.1908505695251206],
            [103.79754279446973, 1.162185839440336],
            [103.7289585176761, 1.106335790219153],
            [103.6417797185493, 1.1589399540265162],
            [103.585863880306, 1.2066363945636394],
            [103.59792723935364, 1.2919237570573665],
            [103.63485883142464, 1.3588104462947608],
            [103.6462374234933, 1.3806937679568285],
            [103.65279787976912, 1.3950005416414815],
            [103.65946943327104, 1.4128145320250316],
            [103.67615326814511, 1.4347705292902755],
            [103.69327770486343, 1.4434208926808185],
            [103.72042428855906, 1.4554452536941191],
            [103.74985651040696, 1.4468386465687348],
            [103.77290214158624, 1.4558144409701261],
            [103.80443247130093, 1.4738392913376015],
            [103.83469122849768, 1.4743439343325324],
            [103.86651306772077, 1.4510015666324716],
            [103.89309269347154, 1.4303932157181767],
            [103.93394413942944, 1.4279110982620784],
            [103.95723153207024, 1.42030396077825],
            [103.99465010885501, 1.4243173169419483],
            [104.03210800114448, 1.4441922257891382],
            [104.04776398125854, 1.4438402346087233],
            [104.06414692472994, 1.4359722879905976],
          ],
        ],
        type: "Polygon",
      },
    },
  ],
};

// Example coordinates for a location in Singapore
// 1.462932, 
const lat = 1.265008;
const long = 103.680270;

// Get the polygon coordinates from the dataset
const coordinates = test.features[0].geometry.coordinates[0];

// Check if the point is inside the polygon
const result = isPointInPolygon(lat, long, coordinates);

if (result) {
  console.log("The point is located in Singapore.");
} else {
  console.log("The point is outside Singapore.");
}
